% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mc.R
\name{mc}
\alias{mc}
\title{Monte Carlo Method for Indirect Effect in a Simple Mediation Model}
\usage{
mc(
  R = 200,
  alphahat,
  sehatalphahat,
  betahat,
  sehatbetahat,
  mvn = TRUE,
  n,
  alpha = c(0.001, 0.01, 0.05),
  plot = TRUE
)
}
\arguments{
\item{R}{Integer.
Monte Carlo replications.}

\item{alphahat}{Numeric.
Estimated slope of path from \code{x} to \code{m} \eqn{\left( \hat{\alpha} \right)} .}

\item{sehatalphahat}{Numeric.
Estimated standard error of slope of path from \code{x} to \code{m} \eqn{\left( \widehat{se}_{\hat{\alpha}} \right)} .}

\item{betahat}{Numeric.
Estimated slope of path from \code{m} to \code{y} \eqn{\left( \hat{\beta} \right)} .}

\item{sehatbetahat}{Numeric.
Estimated standard error of slope of path from \code{m} to \code{y} \eqn{\left( \widehat{se}_{\hat{\beta}} \right)} .}

\item{mvn}{Logical.
If \code{TRUE}, generate data from a multivariate normal distribution.
If \code{FALSE}, generate \eqn{\hat{\alpha}^{*}} from a \eqn{t} distribution with \eqn{df = n - 2}
and generate \eqn{\hat{\beta}^{*}} from a \eqn{t} distribution with \eqn{df = n - 3} .}

\item{n}{Integer.
Sample size.}

\item{alpha}{Numeric vector.
Alpha level.
By default \code{alpha = c(0.001, 0.01, 0.05)}.}

\item{plot}{Logical.
Plot the sampling distribution of the indirect effect.}
}
\description{
Monte Carlo Method for Indirect Effect in a Simple Mediation Model
}
\examples{
# mvn --------------------------------------------------------------
mc(
  R = 5000, alphahat = 0.338593, sehatalphahat = 0.12236736,
  betahat = 0.451039, sehatbetahat = 0.14597405
)
# mvt --------------------------------------------------------------
mc(
  R = 5000, alphahat = 0.338593, sehatalphahat = 0.12236736,
  betahat = 0.451039, sehatbetahat = 0.14597405,
  mvn = FALSE, n = 20
)
}
\seealso{
Other monte carlo method functions: 
\code{\link{.mcmvn}()},
\code{\link{.mct}()},
\code{\link{mvn_mcmvn_mar_pcci_simulation}()},
\code{\link{mvn_mcmvn_mar_pcci_task}()},
\code{\link{mvn_mcmvn_mar_simulation}()},
\code{\link{mvn_mcmvn_mar_task}()},
\code{\link{mvn_mcmvn_mar}()},
\code{\link{mvn_mcmvn_mcar_pcci_simulation}()},
\code{\link{mvn_mcmvn_mcar_pcci_task}()},
\code{\link{mvn_mcmvn_mcar_simulation}()},
\code{\link{mvn_mcmvn_mcar_task}()},
\code{\link{mvn_mcmvn_mcar}()},
\code{\link{mvn_mcmvn_pcci_simulation}()},
\code{\link{mvn_mcmvn_pcci_task}()},
\code{\link{mvn_mcmvn_simulation}()},
\code{\link{mvn_mcmvn_task}()},
\code{\link{mvn_mcmvn}()},
\code{\link{mvn_mct_mar_pcci_simulation}()},
\code{\link{mvn_mct_mar_pcci_task}()},
\code{\link{mvn_mct_mar_simulation}()},
\code{\link{mvn_mct_mar_task}()},
\code{\link{mvn_mct_mar}()},
\code{\link{mvn_mct_mcar_pcci_simulation}()},
\code{\link{mvn_mct_mcar_pcci_task}()},
\code{\link{mvn_mct_mcar_simulation}()},
\code{\link{mvn_mct_mcar_task}()},
\code{\link{mvn_mct_mcar}()},
\code{\link{mvn_mct_pcci_simulation}()},
\code{\link{mvn_mct_pcci_task}()},
\code{\link{mvn_mct_simulation}()},
\code{\link{mvn_mct_task}()},
\code{\link{mvn_mct}()},
\code{\link{mvn_std_mcmvndelta_pcci_simulation}()},
\code{\link{mvn_std_mcmvndelta_pcci_task}()},
\code{\link{mvn_std_mcmvndelta_simulation}()},
\code{\link{mvn_std_mcmvndelta_task}()},
\code{\link{mvn_std_mcmvndelta}()},
\code{\link{mvn_std_mcmvnsem_pcci_simulation}()},
\code{\link{mvn_std_mcmvnsem_pcci_task}()},
\code{\link{mvn_std_mcmvnsem_simulation}()},
\code{\link{mvn_std_mcmvnsem_task}()},
\code{\link{mvn_std_mcmvnsem}()},
\code{\link{mvn_std_mcmvntb_pcci_simulation}()},
\code{\link{mvn_std_mcmvntb_pcci_task}()},
\code{\link{mvn_std_mcmvntb_simulation}()},
\code{\link{mvn_std_mcmvntb_task}()},
\code{\link{mvn_std_mcmvntb}()},
\code{\link{mvn_std_mctdelta_pcci_simulation}()},
\code{\link{mvn_std_mctdelta_pcci_task}()},
\code{\link{mvn_std_mctdelta_simulation}()},
\code{\link{mvn_std_mctdelta_task}()},
\code{\link{mvn_std_mctdelta}()},
\code{\link{mvn_std_mctsem_pcci_simulation}()},
\code{\link{mvn_std_mctsem_pcci_task}()},
\code{\link{mvn_std_mctsem_simulation}()},
\code{\link{mvn_std_mctsem_task}()},
\code{\link{mvn_std_mctsem}()},
\code{\link{mvn_std_mcttb_pcci_simulation}()},
\code{\link{mvn_std_mcttb_pcci_task}()},
\code{\link{mvn_std_mcttb_simulation}()},
\code{\link{mvn_std_mcttb_task}()},
\code{\link{mvn_std_mcttb}()}
}
\author{
Ivan Jacob Agaloos Pesigan
}
\concept{monte carlo method functions}
\keyword{mc}

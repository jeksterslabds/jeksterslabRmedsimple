% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nb.del.R
\name{nb.del}
\alias{nb.del}
\title{Nonparametric Bootstrapping (Listwise Deletion)}
\usage{
nb.del(
  data,
  std = FALSE,
  B = 5000,
  par = TRUE,
  ncores = NULL,
  blas_threads = TRUE,
  mc = TRUE,
  lb = FALSE
)
}
\arguments{
\item{data}{\code{n} by 3 matrix or data frame.
\code{data[, 1]} correspond to values for \code{x}.
\code{data[, 2]} correspond to values for \code{m}.
\code{data[, 3]} correspond to values for \code{y}.}

\item{std}{Logical.
Standardize the indirect effect \eqn{\hat{\alpha} \hat{\beta} \frac{\sigma_x}{\sigma_y}}.}

\item{B}{Integer.
Number of bootstrap samples.}

\item{par}{Logical.
If \code{TRUE}, use multiple cores.
If \code{FALSE}, use \code{\link[=lapply]{lapply()}}.}

\item{ncores}{Integer.
Number of cores to use if \code{par = TRUE}.
If unspecified, defaults to \code{detectCores() - 1}.}

\item{blas_threads}{Logical.
If \code{TRUE}, set BLAS threads using \code{blas_set_num_threads(threads = blas_get_num_procs())}.
If \code{FALSE}, set BLAS threads using \code{blas_set_num_threads(threads = 1)}.
If \code{par = TRUE}, \code{blas_threads} is automatically set to \code{FALSE}
to prevent conflicts in parallel processing.
This argument is useful when \code{FUN} can handle implicit parallelism
when \code{par = FALSE}, for example linear algebra operations.}

\item{mc}{Logical.
If \code{TRUE}, use \code{\link[parallel:mclapply]{parallel::mclapply()}}.
If \code{FALSE}, use \code{\link[parallel:clusterApply]{parallel::parLapply()}} or \code{\link[parallel:clusterApply]{parallel::parLapplyLB()}}.
Ignored if \code{par = FALSE}.}

\item{lb}{Logical.
If \code{TRUE} use \code{\link[parallel:clusterApply]{parallel::parLapplyLB()}}.
If \code{FALSE}, use \code{\link[parallel:clusterApply]{parallel::parLapply()}}.
Ignored if \code{par = FALSE} and \code{mc = TRUE}.}
}
\description{
Nonparametric Bootstrapping (Listwise Deletion)
}
\examples{
data <- jeksterslabRdatarepo::thirst

# Unstandardized -------------------------------------------------------------
thetahatstar <- nb.del(data = data, B = 5000, par = FALSE)
hist(thetahatstar)

# Standardized ---------------------------------------------------------------
thetahatstar <- nb.del(data = data, std = TRUE, B = 5000, par = FALSE)
hist(thetahatstar)
}
\seealso{
Other nonparametric functions: 
\code{\link{beta_nb_bcaci_simulation}()},
\code{\link{beta_nb_bcaci_task}()},
\code{\link{beta_nb_bcci_simulation}()},
\code{\link{beta_nb_bcci_task}()},
\code{\link{beta_nb_pcci_simulation}()},
\code{\link{beta_nb_pcci_task}()},
\code{\link{beta_nb_simulation}()},
\code{\link{beta_nb_task}()},
\code{\link{beta_nb}()},
\code{\link{exp_nb_bcaci_simulation}()},
\code{\link{exp_nb_bcaci_task}()},
\code{\link{exp_nb_bcci_simulation}()},
\code{\link{exp_nb_bcci_task}()},
\code{\link{exp_nb_pcci_simulation}()},
\code{\link{exp_nb_pcci_task}()},
\code{\link{exp_nb_simulation}()},
\code{\link{exp_nb_task}()},
\code{\link{exp_nb}()},
\code{\link{mvn_mar_10_nb.del_bcci_simulation}()},
\code{\link{mvn_mar_10_nb.del_bcci_task}()},
\code{\link{mvn_mar_10_nb.del_pcci_simulation}()},
\code{\link{mvn_mar_10_nb.del_pcci_task}()},
\code{\link{mvn_mar_10_nb.del_simulation}()},
\code{\link{mvn_mar_10_nb.del_task}()},
\code{\link{mvn_mar_10_nb.del}()},
\code{\link{mvn_mar_10_nb.fiml_bcci_simulation}()},
\code{\link{mvn_mar_10_nb.fiml_pcci_simulation}()},
\code{\link{mvn_mar_10_nb_bcci_simulation}()},
\code{\link{mvn_mar_10_nb_bcci_task}()},
\code{\link{mvn_mar_10_nb_pcci_simulation}()},
\code{\link{mvn_mar_10_nb_pcci_task}()},
\code{\link{mvn_mar_10_nb_simulation}()},
\code{\link{mvn_mar_10_nb_task}()},
\code{\link{mvn_mar_10_nbbc.fiml_simulation}()},
\code{\link{mvn_mar_10_nbbc.fiml_task}()},
\code{\link{mvn_mar_10_nbpc.fiml_simulation}()},
\code{\link{mvn_mar_10_nbpc.fiml_task}()},
\code{\link{mvn_mar_10_nb}()},
\code{\link{mvn_mar_20_nb.del_bcci_simulation}()},
\code{\link{mvn_mar_20_nb.del_bcci_task}()},
\code{\link{mvn_mar_20_nb.del_pcci_simulation}()},
\code{\link{mvn_mar_20_nb.del_pcci_task}()},
\code{\link{mvn_mar_20_nb.del_simulation}()},
\code{\link{mvn_mar_20_nb.del_task}()},
\code{\link{mvn_mar_20_nb.del}()},
\code{\link{mvn_mar_20_nb.fiml_bcci_simulation}()},
\code{\link{mvn_mar_20_nb.fiml_pcci_simulation}()},
\code{\link{mvn_mar_20_nb_bcci_simulation}()},
\code{\link{mvn_mar_20_nb_bcci_task}()},
\code{\link{mvn_mar_20_nb_pcci_simulation}()},
\code{\link{mvn_mar_20_nb_pcci_task}()},
\code{\link{mvn_mar_20_nb_simulation}()},
\code{\link{mvn_mar_20_nb_task}()},
\code{\link{mvn_mar_20_nbbc.fiml_simulation}()},
\code{\link{mvn_mar_20_nbbc.fiml_task}()},
\code{\link{mvn_mar_20_nbpc.fiml_simulation}()},
\code{\link{mvn_mar_20_nbpc.fiml_task}()},
\code{\link{mvn_mar_20_nb}()},
\code{\link{mvn_mar_30_nb.del_bcci_simulation}()},
\code{\link{mvn_mar_30_nb.del_bcci_task}()},
\code{\link{mvn_mar_30_nb.del_pcci_simulation}()},
\code{\link{mvn_mar_30_nb.del_pcci_task}()},
\code{\link{mvn_mar_30_nb.del_simulation}()},
\code{\link{mvn_mar_30_nb.del_task}()},
\code{\link{mvn_mar_30_nb.del}()},
\code{\link{mvn_mar_30_nb.fiml_bcci_simulation}()},
\code{\link{mvn_mar_30_nb.fiml_pcci_simulation}()},
\code{\link{mvn_mar_30_nb_bcci_simulation}()},
\code{\link{mvn_mar_30_nb_bcci_task}()},
\code{\link{mvn_mar_30_nb_pcci_simulation}()},
\code{\link{mvn_mar_30_nb_pcci_task}()},
\code{\link{mvn_mar_30_nb_simulation}()},
\code{\link{mvn_mar_30_nb_task}()},
\code{\link{mvn_mar_30_nbbc.fiml_simulation}()},
\code{\link{mvn_mar_30_nbbc.fiml_task}()},
\code{\link{mvn_mar_30_nbpc.fiml_simulation}()},
\code{\link{mvn_mar_30_nbpc.fiml_task}()},
\code{\link{mvn_mar_30_nb}()},
\code{\link{mvn_mcar_10_nb.del_bcci_simulation}()},
\code{\link{mvn_mcar_10_nb.del_bcci_task}()},
\code{\link{mvn_mcar_10_nb.del_pcci_simulation}()},
\code{\link{mvn_mcar_10_nb.del_pcci_task}()},
\code{\link{mvn_mcar_10_nb.del_simulation}()},
\code{\link{mvn_mcar_10_nb.del_task}()},
\code{\link{mvn_mcar_10_nb.del}()},
\code{\link{mvn_mcar_10_nb.fiml_bcci_simulation}()},
\code{\link{mvn_mcar_10_nb.fiml_pcci_simulation}()},
\code{\link{mvn_mcar_10_nb_bcci_simulation}()},
\code{\link{mvn_mcar_10_nb_bcci_task}()},
\code{\link{mvn_mcar_10_nb_pcci_simulation}()},
\code{\link{mvn_mcar_10_nb_pcci_task}()},
\code{\link{mvn_mcar_10_nb_simulation}()},
\code{\link{mvn_mcar_10_nb_task}()},
\code{\link{mvn_mcar_10_nbbc.fiml_simulation}()},
\code{\link{mvn_mcar_10_nbbc.fiml_task}()},
\code{\link{mvn_mcar_10_nbpc.fiml_simulation}()},
\code{\link{mvn_mcar_10_nbpc.fiml_task}()},
\code{\link{mvn_mcar_10_nb}()},
\code{\link{mvn_mcar_20_nb.del_bcci_simulation}()},
\code{\link{mvn_mcar_20_nb.del_bcci_task}()},
\code{\link{mvn_mcar_20_nb.del_pcci_simulation}()},
\code{\link{mvn_mcar_20_nb.del_pcci_task}()},
\code{\link{mvn_mcar_20_nb.del_simulation}()},
\code{\link{mvn_mcar_20_nb.del_task}()},
\code{\link{mvn_mcar_20_nb.del}()},
\code{\link{mvn_mcar_20_nb.fiml_bcci_simulation}()},
\code{\link{mvn_mcar_20_nb.fiml_pcci_simulation}()},
\code{\link{mvn_mcar_20_nb_bcci_simulation}()},
\code{\link{mvn_mcar_20_nb_bcci_task}()},
\code{\link{mvn_mcar_20_nb_pcci_simulation}()},
\code{\link{mvn_mcar_20_nb_pcci_task}()},
\code{\link{mvn_mcar_20_nb_simulation}()},
\code{\link{mvn_mcar_20_nb_task}()},
\code{\link{mvn_mcar_20_nbbc.fiml_simulation}()},
\code{\link{mvn_mcar_20_nbbc.fiml_task}()},
\code{\link{mvn_mcar_20_nbpc.fiml_simulation}()},
\code{\link{mvn_mcar_20_nbpc.fiml_task}()},
\code{\link{mvn_mcar_20_nb}()},
\code{\link{mvn_mcar_30_nb.del_bcci_simulation}()},
\code{\link{mvn_mcar_30_nb.del_bcci_task}()},
\code{\link{mvn_mcar_30_nb.del_pcci_simulation}()},
\code{\link{mvn_mcar_30_nb.del_pcci_task}()},
\code{\link{mvn_mcar_30_nb.del_simulation}()},
\code{\link{mvn_mcar_30_nb.del_task}()},
\code{\link{mvn_mcar_30_nb.del}()},
\code{\link{mvn_mcar_30_nb.fiml_bcci_simulation}()},
\code{\link{mvn_mcar_30_nb.fiml_pcci_simulation}()},
\code{\link{mvn_mcar_30_nb_bcci_simulation}()},
\code{\link{mvn_mcar_30_nb_bcci_task}()},
\code{\link{mvn_mcar_30_nb_pcci_simulation}()},
\code{\link{mvn_mcar_30_nb_pcci_task}()},
\code{\link{mvn_mcar_30_nb_simulation}()},
\code{\link{mvn_mcar_30_nb_task}()},
\code{\link{mvn_mcar_30_nbbc.fiml_simulation}()},
\code{\link{mvn_mcar_30_nbbc.fiml_task}()},
\code{\link{mvn_mcar_30_nbpc.fiml_simulation}()},
\code{\link{mvn_mcar_30_nbpc.fiml_task}()},
\code{\link{mvn_mcar_30_nb}()},
\code{\link{mvn_mnar_10_nb.del_bcci_simulation}()},
\code{\link{mvn_mnar_10_nb.del_bcci_task}()},
\code{\link{mvn_mnar_10_nb.del_pcci_simulation}()},
\code{\link{mvn_mnar_10_nb.del_pcci_task}()},
\code{\link{mvn_mnar_10_nb.del_simulation}()},
\code{\link{mvn_mnar_10_nb.del_task}()},
\code{\link{mvn_mnar_10_nb.del}()},
\code{\link{mvn_mnar_10_nb.fiml_bcci_simulation}()},
\code{\link{mvn_mnar_10_nb.fiml_pcci_simulation}()},
\code{\link{mvn_mnar_10_nb_bcci_simulation}()},
\code{\link{mvn_mnar_10_nb_bcci_task}()},
\code{\link{mvn_mnar_10_nb_pcci_simulation}()},
\code{\link{mvn_mnar_10_nb_pcci_task}()},
\code{\link{mvn_mnar_10_nb_simulation}()},
\code{\link{mvn_mnar_10_nb_task}()},
\code{\link{mvn_mnar_10_nbbc.fiml_simulation}()},
\code{\link{mvn_mnar_10_nbbc.fiml_task}()},
\code{\link{mvn_mnar_10_nbpc.fiml_simulation}()},
\code{\link{mvn_mnar_10_nbpc.fiml_task}()},
\code{\link{mvn_mnar_10_nb}()},
\code{\link{mvn_mnar_20_nb.del_bcci_simulation}()},
\code{\link{mvn_mnar_20_nb.del_bcci_task}()},
\code{\link{mvn_mnar_20_nb.del_pcci_simulation}()},
\code{\link{mvn_mnar_20_nb.del_pcci_task}()},
\code{\link{mvn_mnar_20_nb.del_simulation}()},
\code{\link{mvn_mnar_20_nb.del_task}()},
\code{\link{mvn_mnar_20_nb.del}()},
\code{\link{mvn_mnar_20_nb.fiml_bcci_simulation}()},
\code{\link{mvn_mnar_20_nb.fiml_pcci_simulation}()},
\code{\link{mvn_mnar_20_nb_bcci_simulation}()},
\code{\link{mvn_mnar_20_nb_bcci_task}()},
\code{\link{mvn_mnar_20_nb_pcci_simulation}()},
\code{\link{mvn_mnar_20_nb_pcci_task}()},
\code{\link{mvn_mnar_20_nb_simulation}()},
\code{\link{mvn_mnar_20_nb_task}()},
\code{\link{mvn_mnar_20_nbbc.fiml_simulation}()},
\code{\link{mvn_mnar_20_nbbc.fiml_task}()},
\code{\link{mvn_mnar_20_nbpc.fiml_simulation}()},
\code{\link{mvn_mnar_20_nbpc.fiml_task}()},
\code{\link{mvn_mnar_20_nb}()},
\code{\link{mvn_mnar_30_nb.del_bcci_simulation}()},
\code{\link{mvn_mnar_30_nb.del_bcci_task}()},
\code{\link{mvn_mnar_30_nb.del_pcci_simulation}()},
\code{\link{mvn_mnar_30_nb.del_pcci_task}()},
\code{\link{mvn_mnar_30_nb.del_simulation}()},
\code{\link{mvn_mnar_30_nb.del_task}()},
\code{\link{mvn_mnar_30_nb.del}()},
\code{\link{mvn_mnar_30_nb.fiml_bcci_simulation}()},
\code{\link{mvn_mnar_30_nb.fiml_pcci_simulation}()},
\code{\link{mvn_mnar_30_nb_bcci_simulation}()},
\code{\link{mvn_mnar_30_nb_bcci_task}()},
\code{\link{mvn_mnar_30_nb_pcci_simulation}()},
\code{\link{mvn_mnar_30_nb_pcci_task}()},
\code{\link{mvn_mnar_30_nb_simulation}()},
\code{\link{mvn_mnar_30_nb_task}()},
\code{\link{mvn_mnar_30_nbbc.fiml_simulation}()},
\code{\link{mvn_mnar_30_nbbc.fiml_task}()},
\code{\link{mvn_mnar_30_nbpc.fiml_simulation}()},
\code{\link{mvn_mnar_30_nbpc.fiml_task}()},
\code{\link{mvn_mnar_30_nb}()},
\code{\link{mvn_nb_bcaci_simulation}()},
\code{\link{mvn_nb_bcaci_task}()},
\code{\link{mvn_nb_bcci_simulation}()},
\code{\link{mvn_nb_bcci_task}()},
\code{\link{mvn_nb_pcci_simulation}()},
\code{\link{mvn_nb_pcci_task}()},
\code{\link{mvn_nb_simulation}()},
\code{\link{mvn_nb_task}()},
\code{\link{mvn_nb}()},
\code{\link{mvn_std_nb_bcaci_simulation}()},
\code{\link{mvn_std_nb_bcaci_task}()},
\code{\link{mvn_std_nb_bcci_simulation}()},
\code{\link{mvn_std_nb_bcci_task}()},
\code{\link{mvn_std_nb_pcci_simulation}()},
\code{\link{mvn_std_nb_pcci_task}()},
\code{\link{mvn_std_nb_simulation}()},
\code{\link{mvn_std_nb_task}()},
\code{\link{mvn_std_nb}()},
\code{\link{nb.fiml}()},
\code{\link{nbbc.fiml}()},
\code{\link{nbpc.fiml}()},
\code{\link{nb}()},
\code{\link{vm_mod_nb_bcaci_simulation}()},
\code{\link{vm_mod_nb_bcaci_task}()},
\code{\link{vm_mod_nb_bcci_simulation}()},
\code{\link{vm_mod_nb_bcci_task}()},
\code{\link{vm_mod_nb_pcci_simulation}()},
\code{\link{vm_mod_nb_pcci_task}()},
\code{\link{vm_mod_nb_simulation}()},
\code{\link{vm_mod_nb_task}()},
\code{\link{vm_mod_nb}()},
\code{\link{vm_mod_std_nb_bcaci_simulation}()},
\code{\link{vm_mod_std_nb_bcaci_task}()},
\code{\link{vm_mod_std_nb_bcci_simulation}()},
\code{\link{vm_mod_std_nb_bcci_task}()},
\code{\link{vm_mod_std_nb_pcci_simulation}()},
\code{\link{vm_mod_std_nb_pcci_task}()},
\code{\link{vm_mod_std_nb_simulation}()},
\code{\link{vm_mod_std_nb_task}()},
\code{\link{vm_mod_std_nb}()},
\code{\link{vm_sev_nb_bcaci_simulation}()},
\code{\link{vm_sev_nb_bcaci_task}()},
\code{\link{vm_sev_nb_bcci_simulation}()},
\code{\link{vm_sev_nb_bcci_task}()},
\code{\link{vm_sev_nb_pcci_simulation}()},
\code{\link{vm_sev_nb_pcci_task}()},
\code{\link{vm_sev_nb_simulation}()},
\code{\link{vm_sev_nb_task}()},
\code{\link{vm_sev_nb}()},
\code{\link{vm_sev_std_nb_bcaci_simulation}()},
\code{\link{vm_sev_std_nb_bcaci_task}()},
\code{\link{vm_sev_std_nb_bcci_simulation}()},
\code{\link{vm_sev_std_nb_bcci_task}()},
\code{\link{vm_sev_std_nb_pcci_simulation}()},
\code{\link{vm_sev_std_nb_pcci_task}()},
\code{\link{vm_sev_std_nb_simulation}()},
\code{\link{vm_sev_std_nb_task}()},
\code{\link{vm_sev_std_nb}()}
}
\author{
Ivan Jacob Agaloos Pesigan
}
\concept{nonparametric functions}
\keyword{nb}
